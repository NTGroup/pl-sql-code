
Функция Clients_add(Запрос)

  //Читаем XML из POST запроса
  
  // http://176.9.37.248:8080/dev/hs/kzn/cntr/add
  
  ////<company param="..." ... >
  ////    <name>...</name>
  ///     ...
  ////    <contracts>
  ////        <contract>
  ////            <number>...</number>
  ////            ...
  ////        </contract>
  ////        ...
  ////    </contracts>
  ////</company>  

  
  ////<client id="5">
  ////   <name>Shrew Crew</name>
  ////   <contracts />
  ////</company>
  
  //в случае существования группы(компании), заносим контракты в нее
  //Иначе заводим группу
  //Если контаркт существует, обновляем его данные
  //Иначе создаем новый контракт
  //
  // Ошибки:
  //   
  
  v_XML="";
  v_client=-1;
  //читаем XML
  XML = Новый ЧтениеXML;
  XML.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
  
	//	  Ответ = Новый HTTPСервисОтвет(400);
//		  Возврат Ответ;


  
  XML.Прочитать();
  Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента и XML.Имя = "client" Тогда
    //company
      Пока XML.ПрочитатьАтрибут() Цикл
	    Если XML.Имя = "id" Тогда
            v_client = число(XML.Значение);   
        КонецЕсли;
          //v_XML=v_XML + XML.Имя + " = " + XML.Значение;
      КонецЦикла;

	  if v_client = -1 then 
		  Ответ = Новый HTTPСервисОтвет(400);
		  Возврат Ответ;
	  elsif v_client = 0 then 
		  Ответ = Новый HTTPСервисОтвет(409);
		  Возврат Ответ;
	  endif;
		  
      XML.Прочитать(); // мы находимся на <name>
      Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента и  XML.Имя = "name" Тогда
          XML.Прочитать(); // мы находимся внутри name можем прочитать name value
          if XML.ТипУзла = ТипУзлаXML.Текст then

//            Группа = Справочники.Контрагенты.НайтиПоНаименованию(XML.Значение,Истина);
            link_Группа = Справочники.Контрагенты.НайтиПоРеквизиту("po_id",v_client);
			
            //    link_contr = Справочники.Контрагенты.НайтиПоРеквизиту("po_id",v_contract,Группа.Ссылка);
                
		    Если link_Группа.Пустая() Тогда 
		      Группа = Справочники.Контрагенты.СоздатьГруппу(); 
		    Иначе
		    //  Группа = link_Группа.ПолучитьОбъект();
				 Ответ = Новый HTTPСервисОтвет(409);
			  	Возврат Ответ;

		    КонецЕсли;
			
          //  Если Группа.Пустая() Тогда 
             //   Группа = Справочники.Контрагенты.СоздатьГруппу(); 
                Группа.Наименование = XML.Значение;
                Группа.po_id = v_client;
				
                Группа.Записать();
            //ИначеЕсли Не Группа.ЭтоГруппа Тогда 
            //    Сообщить("Найден элемент справочника с указанным кодом!");   
            //    // Предусмотреть прерывание алгоритма.
         //   КонецЕсли;            
            
            XML.Прочитать(); // мы находимся на </name>
          endif;
       // endif;
      КонецЕсли;
    //endif;
  КонецЕсли;  
  XML.Закрыть();  

  // в ответ отдаем код 200 и что-нибудь в теле ответа
  //ПолныйКодКонтрагента = v_cntr.ПолныйКод();
  Ответ = Новый HTTPСервисОтвет(201);
  Ответ.УстановитьТелоИзСтроки("client_Check Работает" + v_XML //+ ОписаниеОшибки()
  );
  Возврат Ответ;
КонецФункции


Функция Client_edit(Запрос)

  //Читаем XML из POST запроса
  
  // http://176.9.37.248:8080/dev/hs/kzn/cntr/add
  
  ////<company param="..." ... >
  ////    <name>...</name>
  ///     ...
  ////    <contracts>
  ////        <contract>
  ////            <number>...</number>
  ////            ...
  ////        </contract>
  ////        ...
  ////    </contracts>
  ////</company>  

  
  ////<client id="5">
  ////   <name>Shrew Crew</name>
  ////   <contracts />
  ////</company>
  
  //в случае существования группы(компании), заносим контракты в нее
  //Иначе заводим группу
  //Если контаркт существует, обновляем его данные
  //Иначе создаем новый контракт
  //
  // Ошибки:
  //   
  
  v_XML="";
  v_client=-1;
  //читаем XML
  XML = Новый ЧтениеXML;
  XML.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
  
	//	  Ответ = Новый HTTPСервисОтвет(400);
//		  Возврат Ответ;


  
  XML.Прочитать();
  Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента и XML.Имя = "client" Тогда
    //company
      Пока XML.ПрочитатьАтрибут() Цикл
	    Если XML.Имя = "id" Тогда
            v_client = число(XML.Значение);   
        КонецЕсли;
          //v_XML=v_XML + XML.Имя + " = " + XML.Значение;
      КонецЦикла;

	  if v_client = -1 then 
		  Ответ = Новый HTTPСервисОтвет(400);
		  Возврат Ответ;
	  elsif v_client = 0 then 
		  Ответ = Новый HTTPСервисОтвет(409);
		  Возврат Ответ;
	  endif;
		  
      XML.Прочитать(); // мы находимся на <name>
      Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента и  XML.Имя = "name" Тогда
          XML.Прочитать(); // мы находимся внутри name можем прочитать name value
          if XML.ТипУзла = ТипУзлаXML.Текст then

//            Группа = Справочники.Контрагенты.НайтиПоНаименованию(XML.Значение,Истина);
            link_Группа = Справочники.Контрагенты.НайтиПоРеквизиту("po_id",v_client);
			
            //    link_contr = Справочники.Контрагенты.НайтиПоРеквизиту("po_id",v_contract,Группа.Ссылка);
                
		    Если link_Группа.Пустая() Тогда 
//		      Группа = Справочники.Контрагенты.СоздатьГруппу(); 
				 Ответ = Новый HTTPСервисОтвет(404);
			  	Возврат Ответ;
		    Иначе
		      Группа = link_Группа.ПолучитьОбъект();

		    КонецЕсли;
			
			Если Не Группа.ЭтоГруппа Тогда 
				Ответ = Новый HTTPСервисОтвет(409);
				Возврат Ответ;
            КонецЕсли;
		 
			
          //  Если Группа.Пустая() Тогда 
             //   Группа = Справочники.Контрагенты.СоздатьГруппу(); 
                Группа.Наименование = XML.Значение;
                Группа.po_id = v_client;
				
                Группа.Записать();
            //ИначеЕсли Не Группа.ЭтоГруппа Тогда 
            //    Сообщить("Найден элемент справочника с указанным кодом!");   
            //    // Предусмотреть прерывание алгоритма.
         //   КонецЕсли;            
            
            XML.Прочитать(); // мы находимся на </name>
          endif;
       // endif;
      КонецЕсли;
    //endif;
  КонецЕсли;  
  XML.Закрыть();  

  // в ответ отдаем код 200 и что-нибудь в теле ответа
  //ПолныйКодКонтрагента = v_cntr.ПолныйКод();
  Ответ = Новый HTTPСервисОтвет(200);
  Ответ.УстановитьТелоИзСтроки("client_Check Работает" + v_XML //+ ОписаниеОшибки()
  );
  Возврат Ответ;
КонецФункции


Функция contracts_add(Запрос)

  //Читаем XML из POST запроса
  
  // http://176.9.37.248:8080/dev/hs/kzn/cntr/add
  
  ////<company param="..." ... >
  ////    <name>...</name>
  ///     ...
  ////    <contracts>
  ////        <contract>
  ////            <number>...</number>
  ////            ...
  ////        </contract>
  ////        ...
  ////    </contracts>
  ////</company>  

  
  ////<client id="5">
  ////   <contracts>
  ////       <contract id="22">
  ////           <name>20150123-5-1</name>
  ////           <full_name>20150123-5-1</full_name>
  ////       </contract>
  ////   </contracts>
  ////</company>
  
  //в случае существования группы(компании), заносим контракты в нее
  //Иначе заводим группу
  //Если контаркт существует, обновляем его данные
  //Иначе создаем новый контракт
  //
  // Ошибки:
  //   
  
  v_XML="";
  v_client=-1;
  v_contract=-1;
  //читаем XML
  XML = Новый ЧтениеXML;
  XML.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
  
  
  XML.Прочитать();
  Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
    v_XML=v_XML + "<" + XML.Имя + ">";
    
    //company
	if XML.Имя = "client" then    // мы находимся на <company>    
      Пока XML.ПрочитатьАтрибут() Цикл
	    Если XML.Имя = "id" Тогда
            v_client = число(XML.Значение);   
        КонецЕсли;
          //v_XML=v_XML + XML.Имя + " = " + XML.Значение;
      КонецЦикла;

	  if v_client = -1 then 
		  Ответ = Новый HTTPСервисОтвет(400);
		  Возврат Ответ;
	  elsif v_client = 0 then 
		  Ответ = Новый HTTPСервисОтвет(409);
		  Возврат Ответ;
	  endif;
            Группа = Справочники.Контрагенты.НайтиПоРеквизиту("po_id",v_client);
            
            Если Группа.Пустая() Тогда 
			  Ответ = Новый HTTPСервисОтвет(404);
			  Возврат Ответ;

            //ИначеЕсли Не Группа.ЭтоГруппа Тогда 
            //    Сообщить("Найден элемент справочника с указанным кодом!");   
            //    // Предусмотреть прерывание алгоритма.
            КонецЕсли;            
    endif;
  КонецЕсли;
  
  //contracts
  XML.Прочитать(); // мы находимся на <contracts>
  if XML.Имя = "contracts" then    // мы находимся на <contracts>
    Пока XML.Прочитать() Цикл
    
      Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
        v_XML=v_XML + "<" + XML.Имя + ">";
        if XML.Имя = "contract" then            
	      Пока XML.ПрочитатьАтрибут() Цикл
		    Если XML.Имя = "id" Тогда
	            v_contract = число(XML.Значение);   
	        КонецЕсли;
	          //v_XML=v_XML + XML.Имя + " = " + XML.Значение;
	      КонецЦикла;
		  if v_contract = -1 then 
			  Ответ = Новый HTTPСервисОтвет(400);
			  Возврат Ответ;
		  elsif v_contract = 0 then 
			  Ответ = Новый HTTPСервисОтвет(409);
			  Возврат Ответ;
		  endif;
		  
               // link_contr = Справочники.Контрагенты.НайтиПоНаименованию(XML.Значение,Истина,Группа.Ссылка);
                link_contr = Справочники.Контрагенты.НайтиПоРеквизиту("po_id",v_contract,Группа.Ссылка);
                
                Если link_contr.Пустая() Тогда 
                  v_cntr = Справочники.Контрагенты.СоздатьЭлемент(); 
                Иначе
                 // v_cntr = link_contr.ПолучитьОбъект();
				  Ответ = Новый HTTPСервисОтвет(409);
				  Возврат Ответ;

                КонецЕсли;
                
    //            v_cntr.Наименование = XML.Значение;
  //              v_cntr.НаименованиеПолное = XML.Значение+"1";
                v_cntr.Родитель = Группа.Ссылка;     
				v_cntr.po_id = v_contract;
//                v_XML=v_XML + """" +XML.Значение+""""; 
		  
          XML.Прочитать(); // мы находимся на <number>
          Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
            if XML.Имя = "name" then            
              XML.Прочитать(); // мы находимся можем прочитать number
              if XML.ТипУзла = ТипУзлаXML.Текст then
                            
                v_cntr.Наименование = XML.Значение;

                XML.Прочитать(); // мы находимся на </name>
              endif;
            endif;
		КонецЕсли;
		
          XML.Прочитать(); // мы находимся на <number>
          Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
            if XML.Имя = "full_name" then            
              XML.Прочитать(); // мы находимся можем прочитать number
              if XML.ТипУзла = ТипУзлаXML.Текст then
                v_cntr.НаименованиеПолное = XML.Значение;
                XML.Прочитать(); // мы находимся на </name>
              endif;
            endif;
		КонецЕсли;
		
          v_cntr.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
          v_cntr.Записать();  
          ПолныйКодКонтрагента = v_cntr.ПолныйКод();          
        endif;
      КонецЕсли;
    КонецЦикла;
  endif;
  
  XML.Закрыть();  

  // в ответ отдаем код 200 и что-нибудь в теле ответа
  //ПолныйКодКонтрагента = v_cntr.ПолныйКод();
  Ответ = Новый HTTPСервисОтвет(201);
  Ответ.УстановитьТелоИзСтроки("Контрагенты_Check Работает" + v_XML //+ ОписаниеОшибки()
  );
  Возврат Ответ;
КонецФункции


Функция contract_edit(Запрос)

  //Читаем XML из POST запроса
  
  // http://176.9.37.248:8080/dev/hs/kzn/cntr/add
  
  ////<company param="..." ... >
  ////    <name>...</name>
  ///     ...
  ////    <contracts>
  ////        <contract>
  ////            <number>...</number>
  ////            ...
  ////        </contract>
  ////        ...
  ////    </contracts>
  ////</company>  

  
  ////<client id="5">
  ////   <contracts>
  ////       <contract id="22">
  ////           <name>20150123-5-1</name>
  ////           <full_name>20150123-5-1</full_name>
  ////       </contract>
  ////   </contracts>
  ////</company>
  
  //в случае существования группы(компании), заносим контракты в нее
  //Иначе заводим группу
  //Если контаркт существует, обновляем его данные
  //Иначе создаем новый контракт
  //
  // Ошибки:
  //   
  
  v_XML="";
  v_client=-1;
  v_contract=-1;
  //читаем XML
  XML = Новый ЧтениеXML;
  XML.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
  
  
  XML.Прочитать();
  Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
    v_XML=v_XML + "<" + XML.Имя + ">";
    
    //company
	if XML.Имя = "client" then    // мы находимся на <company>    
      Пока XML.ПрочитатьАтрибут() Цикл
	    Если XML.Имя = "id" Тогда
            v_client = число(XML.Значение);   
        КонецЕсли;
          //v_XML=v_XML + XML.Имя + " = " + XML.Значение;
      КонецЦикла;

	  if v_client = -1 then 
		  Ответ = Новый HTTPСервисОтвет(400);
		  Возврат Ответ;
	  elsif v_client = 0 then 
		  Ответ = Новый HTTPСервисОтвет(409);
		  Возврат Ответ;
	  endif;
            Группа = Справочники.Контрагенты.НайтиПоРеквизиту("po_id",v_client);
            
            Если Группа.Пустая() Тогда 
			  Ответ = Новый HTTPСервисОтвет(404);
			  Возврат Ответ;

            //ИначеЕсли Не Группа.ЭтоГруппа Тогда 
            //    Сообщить("Найден элемент справочника с указанным кодом!");   
            //    // Предусмотреть прерывание алгоритма.
            КонецЕсли;            
    endif;
  КонецЕсли;
  
  //contracts
  XML.Прочитать(); // мы находимся на <contracts>
  if XML.Имя = "contracts" then    // мы находимся на <contracts>
    Пока XML.Прочитать() Цикл
    
      Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
        v_XML=v_XML + "<" + XML.Имя + ">";
        if XML.Имя = "contract" then            
	      Пока XML.ПрочитатьАтрибут() Цикл
		    Если XML.Имя = "id" Тогда
	            v_contract = число(XML.Значение);   
	        КонецЕсли;
	          //v_XML=v_XML + XML.Имя + " = " + XML.Значение;
	      КонецЦикла;
		  if v_contract = -1 then 
			  Ответ = Новый HTTPСервисОтвет(400);
			  Возврат Ответ;
		  elsif v_contract = 0 then 
			  Ответ = Новый HTTPСервисОтвет(409);
			  Возврат Ответ;
		  endif;
		  
               // link_contr = Справочники.Контрагенты.НайтиПоНаименованию(XML.Значение,Истина,Группа.Ссылка);
                link_contr = Справочники.Контрагенты.НайтиПоРеквизиту("po_id",v_contract,Группа.Ссылка);
                
                Если link_contr.Пустая() Тогда 
//                  v_cntr = Справочники.Контрагенты.СоздатьЭлемент(); 
				  Ответ = Новый HTTPСервисОтвет(404);
				  Возврат Ответ;
                Иначе
                  v_cntr = link_contr.ПолучитьОбъект();

                КонецЕсли;
                
    //            v_cntr.Наименование = XML.Значение;
  //              v_cntr.НаименованиеПолное = XML.Значение+"1";
                v_cntr.Родитель = Группа.Ссылка;     
				v_cntr.po_id = v_contract;
//                v_XML=v_XML + """" +XML.Значение+""""; 
		  
          XML.Прочитать(); // мы находимся на <number>
          Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
            if XML.Имя = "name" then            
              XML.Прочитать(); // мы находимся можем прочитать number
              if XML.ТипУзла = ТипУзлаXML.Текст then
                            
                v_cntr.Наименование = XML.Значение;

                XML.Прочитать(); // мы находимся на </name>
              endif;
            endif;
		КонецЕсли;
		
          XML.Прочитать(); // мы находимся на <number>
          Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
            if XML.Имя = "full_name" then            
              XML.Прочитать(); // мы находимся можем прочитать number
              if XML.ТипУзла = ТипУзлаXML.Текст then
                v_cntr.НаименованиеПолное = XML.Значение;
                XML.Прочитать(); // мы находимся на </name>
              endif;
            endif;
		КонецЕсли;
		
          v_cntr.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
          v_cntr.Записать();  
          ПолныйКодКонтрагента = v_cntr.ПолныйКод();          
        endif;
      КонецЕсли;
    КонецЦикла;
  endif;
  
  XML.Закрыть();  

  // в ответ отдаем код 200 и что-нибудь в теле ответа
  //ПолныйКодКонтрагента = v_cntr.ПолныйКод();
  Ответ = Новый HTTPСервисОтвет(200);
  Ответ.УстановитьТелоИзСтроки("Контрагенты_Check Работает" + v_XML //+ ОписаниеОшибки()
  );
  Возврат Ответ;
КонецФункции


Функция bills_add(Запрос)

  //Читаем XML из POST запроса
  
  // http://176.9.37.248:8080/dev/hs/kzn/bills
  
  
//////<bill task_id="1" contract_id="12332">
//////	<item>
//////        <description>Авиабилет (электронный билет), пассажир Sagiev Adel</description>
//////        <quantity>1</quantity>
//////        <price>12211</price>
//////        <vat>18</vat>
//////    </item>
//////    <item>
//////        <description>Комиссионный  сбор</description>
//////        <quantity>1</quantity>
//////        <price>321</price>
//////        <vat>10</vat>
//////    </item>
//////    <item>
//////        <description>Авиабилет (электронный билет), пассажир POPINEVSKIY SERGEY</description>
//////        <quantity>1</quantity>
//////        <price>54673</price>
//////        <vat>0</vat>
//////    </item>
//////    <item>
//////        <description>Комиссионный  сбор</description>
//////        <quantity>1</quantity>
//////        <price>45</price>
//////        <vat>18</vat>
//////    </item>
//////    <item>
//////        <description>Трансфер</description>
//////        <quantity>1</quantity>
//////        <price>34554</price>
//////        <vat>0</vat>
//////    </item>
//////</bill>

// Создаем новый СчетНаОплатуПокупателю, РеализацияТоваровУслуг, СчетФактураВыданный
// Данные читаем из XML
  
  v_XML="";
  v_НДС=-1;
  is_fare = Истина;
  //читаем XML
  XML = Новый ЧтениеXML;
  XML.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
  
  
    Пока XML.Прочитать() Цикл  //пробегаем все bill внутри bills
      Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента И XML.Имя = "bill" Тогда  
        счет = Документы.СчетНаОплатуПокупателю.СоздатьДокумент();
//		счет = Документы.СчетНаОплатуПокупателю.НайтиПоНомеру("0000-000016",ТекущаяДата())   ;
//		Ответ = Новый HTTPСервисОтвет(201);
//			 Возврат Ответ;

//        счет.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду(810);
        счет.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду(643);
        счет.Дата = ТекущаяДата();
		счет.Организация = Справочники.Организации.НайтиПоНаименованию("ЭН ТИ ГРУПП ООО",Истина);
		счет.ОрганизацияПолучатель = Справочники.Организации.НайтиПоНаименованию("ЭН ТИ ГРУПП ООО",Истина);
		//счет.СтруктурнаяЕдиница
		
        счет.СуммаВключаетНДС = Истина;   
		
        //счет.УчитыватьНДС = "Истина";
        //счет.Организация = Справочники.Организации.НайтиПоКоду("000000002");
        //счет.Комментарий = "Коммент";
//??? ERROR        счет.СтатусОплаты = Перечисления.СтатусОплатыСчетаПокупателю.НеОплачен;
		
        счет.СтруктурнаяЕдиница = Справочники.БанковскиеСчета.НайтиПоРеквизиту("НомерСчета","40702810062000001497") ;
        Пока XML.ПрочитатьАтрибут() Цикл
          Если XML.Имя = "task_id" Тогда
            счет.po_task_id = число(XML.Значение);              
          КонецЕсли;
          Если XML.Имя = "contract_id" Тогда
            счет.Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("po_id",число(XML.Значение));              
          КонецЕсли;
          //v_XML=v_XML + XML.Имя + " = " + XML.Значение;
        КонецЦикла;
        
        Пока XML.Прочитать() Цикл  //пробегаем все item внутри bill  
          
          Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента И XML.Имя = "item" Тогда
//			Услуг = счет.Услуги.Добавить();// ???ERROR
			Услуг = счет.Товары.Добавить();
			v_НДС = -1;
			
//			Услуг.Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию("счет на оплату билета",Истина);
	//		Услуг.Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул","AVIATICKET_VAT_10");
            
            Пока XML.Прочитать() Цикл  //проход по элементам внутри item
              Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
                  ////v_XML=v_XML + "<" + XML.Имя + ">";
                  ////XML.Прочитать();
                  ////v_XML=v_XML + """" +XML.Значение+""""; 
                  //////XML.Значение;
                  
                Если XML.Имя = "product" Тогда
                  XML.Прочитать();
				  Услуг.Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",XML.Значение);
                ИначеЕсли XML.Имя = "description" Тогда
                  XML.Прочитать();
                  Услуг.Содержание = XML.Значение;
                ИначеЕсли XML.Имя = "quantity" Тогда
                  XML.Прочитать();
                  Услуг.Количество = XML.Значение;
                ИначеЕсли XML.Имя = "price" Тогда
                  XML.Прочитать();
                  Услуг.Цена = XML.Значение;
                ИначеЕсли XML.Имя = "vat" Тогда
                  XML.Прочитать();
				  v_НДС = число(XML.Значение);
                  Если v_НДС = 18 Тогда
                    Услуг.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
                  ИначеЕсли v_НДС = 10 Тогда
                    Услуг.СтавкаНДС = Перечисления.СтавкиНДС.НДС10;
                  ИначеЕсли v_НДС = 0 Тогда
                    Услуг.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
                  КонецЕсли;
			
			  	ИначеЕсли XML.Имя = "default" Тогда
                  XML.Прочитать();
			  	КонецЕсли; 
				
			  
              КонецЕсли;
              //выходим
              Если XML.ТипУзла = ТипУзлаXML.КонецЭлемента И XML.Имя = "item" Тогда
                //v_XML=v_XML + "</" + XML.Имя + ">";
                Прервать;
              КонецЕсли;  
            КонецЦикла;
				Услуг.Сумма = Услуг.Количество * Услуг.Цена;
                Услуг.СуммаНДС = (v_НДС/100)*Услуг.Сумма/(1+v_НДС/100);
          КонецЕсли;   
          
          Если XML.ТипУзла = ТипУзлаXML.КонецЭлемента И XML.Имя = "bill" Тогда
//ERROR            счет.СуммаДокумента = счет.Услуги.Итог("Сумма");
            счет.СуммаДокумента = счет.Товары.Итог("Сумма");
     //       счет.Записать(РежимЗаписиДокумента.Проведение);
//            счет.Записать(РежимЗаписиДокумента.Запись,РежимПроведенияДокумента.Оперативный);
            счет.Записать(РежимЗаписиДокумента.Проведение);
            //v_XML=v_XML + "</" + XML.Имя + ">";
            Прервать;
          КонецЕсли;  
        КонецЦикла;
      КонецЕсли;    
    
    КонецЦикла;
  
  
  РеалТУ = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
  РеалТУ.Заполнить(счет.Ссылка);
  РеалТУ.СчетУчетаРасчетовПоАвансам =  ПланыСчетов.Хозрасчетный.НайтиПоКоду("4103"); //     error
  РеалТУ.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.НайтиПоКоду("01.01."); //     error
  РеалТУ.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию("ИмяДоговора", Истина);
  РеалТУ.Записать();
  
// счета-фактуры формируем для формирования отчетности. УПД без них не формируется.
  СФактура = Документы.СчетФактураВыданный.СоздатьДокумент();
  СФактура.Заполнить(РеалТУ.Ссылка);
  СФактура.Записать();
  //// в ответ отдаем код 200 и что-нибудь в теле ответа
  Ответ = Новый HTTPСервисОтвет(201);
  Ответ.УстановитьТелоИзСтроки(счет.Номер);
  Возврат Ответ;

КонецФункции


Функция report_print(Запрос)
// http://localhost/from_kazan/hs/kzn/report/print/po_task_id/report_name/report_format
// сервис формирует отчет и возвращает его пользователю
// запросы содержит поля 
// po_task_id - id счета в PO
// report_name - имя формируемого отчета. доступные отчеты УПД, АКТ, СЧЕТ
// report_format - формат отчета. доступные форматы отчета xls,xlsx,pdf,docx
// Пример: http://localhost/from_kazan/hs/kzn/report/print/23322/УПД/pdf

  
  ИмяФайлаПолное = "";
  ИмяОтчета = Запрос.ПараметрыURL["report_name"];
  ФорматОтчета = НРег(Запрос.ПараметрыURL["report_format"]);
  po_task_id = Запрос.ПараметрыURL["po_task_id"];    
  
//  счет = Документы.СчетНаОплатуПокупателю.НайтиПоРеквизиту("po_task_id",число(po_task_id));
  счет = Документы.СчетНаОплатуПокупателю.НайтиПоНомеру(po_task_id,ТекущаяДата());
  РеалТовУсл =  Документы.РеализацияТоваровУслуг.НайтиПоРеквизиту("СчетНаОплатуПокупателю",счет.Ссылка);
  СчетФактур =  Документы.СчетФактураВыданный.НайтиПоРеквизиту("ДокументОснование",РеалТовУсл.Ссылка);
  ИмяФайлаПолное = report_get(ИмяОтчета,ФорматОтчета,РеалТовУсл,СчетФактур, счет);
  
  Ответ = Новый HTTPСервисОтвет(200);
  
  Если ФорматОтчета = "xls" тогда 
	  Ответ.Заголовки.Вставить("Content-Type", "application/vnd.ms-excel");
  ИначеЕсли ФорматОтчета = "doc" или ФорматОтчета = "docx" тогда 
    Ответ.Заголовки.Вставить("Content-Type", "application/vnd.openxmlformats-officedocument.wordprocessingml.document");
    ФорматОтчета = "docx";  
  ИначеЕсли ФорматОтчета = "xlsx" тогда 
    Ответ.Заголовки.Вставить("Content-Type", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
  ИначеЕсли ФорматОтчета = "pdf" тогда 
    Ответ.Заголовки.Вставить("Content-Type", "application/pdf");
  Иначе
    Ответ = Новый HTTPСервисОтвет(400);
    Ответ.УстановитьТелоИзСтроки("Неподдерживаемый формат отчета.
                                 |поддерживаемые форматы [xls,xlsx,pdf,docx].");
    Возврат Ответ;

  КонецЕсли;    
  
  //Ответ.Заголовки.Вставить("Authorization", "Token " + Token); 
	//Ответ.Заголовки.Вставить("X-Secret", Secret);
	Ответ.Заголовки.Вставить("charset", "UTF-8");
  binar =  Новый ДвоичныеДанные(ИмяФайлаПолное);
  Ответ.УстановитьТелоИзДвоичныхДанных(binar);
  УдалитьФайлы(ИмяФайлаПолное);  
  Возврат Ответ;
КонецФункции

Функция report_get(ИмяОтчета,ФорматОтчета,ОбъектРеализацияТоваровУслуг,ОбъектСчетФактура, Счет)
// функция формирует отчет, сохраняет его на диск во временную папку и возвращает путь к файлу.
// параметры: 
// ИмяОтчета - строка. имя запрошенного отчета . поддерживаемые значения УПД, АКТ, СЧЕТ 
// ФорматОтчета - строка. формат отчета. доступные форматы отчета xls,xlsx,pdf,docx
// ОбъектРеализацияТоваровУслуг - объект ОбъектРеализацияТоваровУслуг
// ОбъектСчетФактура - Объект СчетФактура
// Счет - Объект Счет

  ИмяФайла = ПолучитьИмяВременногоФайла(ФорматОтчета);
  //ИмяПапки = "C:\TEMP\";
  ИмяПолное = ИмяФайла;
  
  МассивОбъектов_СФактура = Новый Массив;
  МассивОбъектов_СФактура.Добавить(ОбъектСчетФактура.Ссылка);
  МассивОбъектов_Счет = Новый Массив;
  МассивОбъектов_Счет.Добавить(Счет.Ссылка);
  ОбъектыПечати = Новый СписокЗначений;
  ТабличныйДокумент = Новый ТабличныйДокумент;
  МассивОбъектов_РеалТУ = Новый массив; 
  МассивОбъектов_РеалТУ.Добавить(ОбъектРеализацияТоваровУслуг.Ссылка);
  
  Если ВРег(ИмяОтчета) = "УПД" Тогда
    ТабличныйДокумент = УчетНДС.ПечатьУниверсальныхПередаточныхДокументов(МассивОбъектов_СФактура, ОбъектыПечати, 
    		Документы.СчетФактураВыданный.ТекстЗапросаПечатьСчетовФактур(Истина, Истина));
  ИначеЕсли ВРег(ИмяОтчета) = "АКТ" Тогда
    ТаблицаСведенийАктаОбОказанииУслуг = Документы.РеализацияТоваровУслуг.ПолучитьТаблицуСведенийАктаОбОказанииУслуг(МассивОбъектов_РеалТУ);
    СтруктураПараметровПечати = Новый Структура;
    СтруктураПараметровПечати.Вставить("ВидДокументаПечати",  "РеализацияТоваровУслуг");
    СтруктураПараметровПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Акт");
    СтруктураПараметровПечати.Вставить("ИмяМакетаПечати",     "Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
    ТабличныйДокумент =   ПечатьТорговыхДокументов.ПечатьАктаОбОказанииУслуг(ТаблицаСведенийАктаОбОказанииУслуг, ОбъектыПечати, СтруктураПараметровПечати);
  ИначеЕсли ВРег(ИмяОтчета) = "СЧЕТ" Тогда
    ТабличныйДокумент = УчетНДС.ПечатьСчетовФактур1137(МассивОбъектов_СФактура, ОбъектыПечати, 
    		Документы.СчетФактураВыданный.ТекстЗапросаПечатьСчетовФактур());
  ИначеЕсли ВРег(ИмяОтчета) = "BILL" Тогда
    ТаблицаСведенийСчетНаОплату = Документы.СчетНаОплатуПокупателю.ПолучитьТаблицуСведенийСчетаНаОплату(МассивОбъектов_Счет);
	//СтруктураПараметровПечати = Новый Структура;
	//СтруктураПараметровПечати.Вставить("ВидДокументаПечати",  "РеализацияТоваровУслуг");
	//СтруктураПараметровПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Акт");
	//СтруктураПараметровПечати.Вставить("ИмяМакетаПечати",     "Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
    ТабличныйДокумент =   ПечатьТорговыхДокументов.ПечатьСчетаНаОплату(ТаблицаСведенийСчетНаОплату, ОбъектыПечати);
  КонецЕсли;
ТабличныйДокумент.Записать(ИмяПолное,ФорматОтчета);

Возврат ИмяПолное;
КонецФункции

Функция пример_отчета(ИмяОтчета,ФорматОтчета,ОбъектРеализацияТоваровУслуг,ОбъектСчетФактура)
  ИмяФайла = ПолучитьИмяВременногоФайла(ФорматОтчета);
  //ИмяПапки = "C:\TEMP\";
  ИмяПолное = ИмяФайла;
  
  МассивОбъектов_СФактура = Новый Массив;
  МассивОбъектов_СФактура.Добавить(ОбъектСчетФактура.Ссылка);
  ОбъектыПечати = Новый СписокЗначений;
  ТабличныйДокумент = Новый ТабличныйДокумент;
  МассивОбъектов_РеалТУ = Новый массив; 
  МассивОбъектов_РеалТУ.Добавить(ОбъектРеализацияТоваровУслуг.Ссылка);
  
  
  
  ////////////////////////////////////// Акт об оказании услуг SUCCESS    
  //ТаблицаСведенийАктаОбОказанииУслуг = Документы.РеализацияТоваровУслуг.ПолучитьТаблицуСведенийАктаОбОказанииУслуг(МассивОбъектов_РеалТУ);
  //СтруктураПараметровПечати = Новый Структура;
  //СтруктураПараметровПечати.Вставить("ВидДокументаПечати",  "РеализацияТоваровУслуг");
  //СтруктураПараметровПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Акт");
  //СтруктураПараметровПечати.Вставить("ИмяМакетаПечати",     "Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
  //ТабличныйДокумент =   ПечатьТорговыхДокументов.ПечатьАктаОбОказанииУслуг(ТаблицаСведенийАктаОбОказанииУслуг, ОбъектыПечати, СтруктураПараметровПечати);
  
  
  //////////////////////////////////// Печать УПД SUCCESS  
  //ТабличныйДокумент = УчетНДС.ПечатьУниверсальныхПередаточныхДокументов(МассивОбъектов_СФактура, ОбъектыПечати, 
  //		Документы.СчетФактураВыданный.ТекстЗапросаПечатьСчетовФактур(Истина, Истина));
  
  
  //////////////////////////////////// Печать Счетов-Фактур1137 SUCCESS      
  //ТабличныйДокумент = УчетНДС.ПечатьСчетовФактур1137(МассивОбъектов_СФактура, ОбъектыПечати, 
  //		Документы.СчетФактураВыданный.ТекстЗапросаПечатьСчетовФактур());

  //////////////////////////////////// Печать Счетов-Фактур старая форма SUCCESS      
  ////НастройкиПечати = УчетНДСВызовСервера.ПолучитьНастройкиПечатиУниверсальныхПередаточныхДокументов(МассивОбъектов_РеалТУ);   
  ////ПараметрыПечати = Новый Структура("ЗаголовокФормы", НастройкиПечати.ЗаголовокФормы);
  //ТабличныйДокумент = УчетНДСБП.ПечатьСчетовФактур(МассивОбъектов_СФактура, ОбъектыПечати, 
  //		Документы.СчетФактураВыданный.ТекстЗапросаПечатьСчетовФактур());
      
      
  //ТабличныйДокумент.Записать(ИмяПолное,ТипФайлаТабличногоДокумента.XLS);
  //ТабличныйДокумент.Записать("C:\TEMP\3.PDF",ТипФайлаТабличногоДокумента.PDF);
  //// в ответ отдаем код 200 и что-нибудь в теле ответа
  
  //Ответ = Новый HTTPСервисОтвет(200);
  //Ответ.УстановитьТелоИзСтроки("Ok!");
  
  Возврат ИмяПолное;
КонецФункции

Функция clientsМетод1(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции
