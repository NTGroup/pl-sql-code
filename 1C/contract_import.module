
Функция Контрагенты_Add(Запрос)

  //Читаем XML из POST запроса
  
  // http://176.9.37.248:8080/dev/hs/kzn/cntr/add
  
  ////<company param="..." ... >
  ////    <name>...</name>
  ///     ...
  ////    <contracts>
  ////        <contract>
  ////            <number>...</number>
  ////            ...
  ////        </contract>
  ////        ...
  ////    </contracts>
  ////</company>  

  
  ////<company id="5">
  ////   <name>Shrew Crew</name>
  ////   <contracts>
  ////       <contract id="22">
  ////           <number>20150123-5-1</number>
  ////       </contract>
  ////   </contracts>
  ////</company>
  
  //в случае существования группы(компании), заносим контракты в нее
  //Иначе заводим группу
  //Если контаркт существует, обновляем его данные
  //Иначе создаем новый контракт
  //
  // Ошибки:
  //   
  
  v_XML=""; 
  //читаем XML
  XML = Новый ЧтениеXML;
  XML.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
  
  
  XML.Прочитать();
  Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
    v_XML=v_XML + "<" + XML.Имя + ">";
    
    //company
    if XML.Имя = "company" then    // мы находимся на <company>      
      XML.Прочитать(); // мы находимся на <name>
      Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
        v_XML=v_XML + "<" + XML.Имя + ">";
        if XML.Имя = "name" then            
          XML.Прочитать(); // мы находимся внутри name можем прочитать name value
          if XML.ТипУзла = ТипУзлаXML.Текст then
            v_XML=v_XML + """" +XML.Значение+""""; 
            Группа = Справочники.Контрагенты.НайтиПоНаименованию(XML.Значение,Истина);
            
            Если Группа.Пустая() Тогда 
                Группа = Справочники.Контрагенты.СоздатьГруппу(); 
                Группа.Наименование = XML.Значение;
                Группа.Записать();
            //ИначеЕсли Не Группа.ЭтоГруппа Тогда 
            //    Сообщить("Найден элемент справочника с указанным кодом!");   
            //    // Предусмотреть прерывание алгоритма.
            КонецЕсли;            
            
            XML.Прочитать(); // мы находимся на </name>
          endif;
        endif;
      КонецЕсли;
    endif;
  КонецЕсли;
  
  //contracts
  XML.Прочитать(); // мы находимся на <contracts>
  if XML.Имя = "contracts" then    // мы находимся на <contracts>
    Пока XML.Прочитать() Цикл
    
      Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
        v_XML=v_XML + "<" + XML.Имя + ">";
        if XML.Имя = "contract" then            
          
          XML.Прочитать(); // мы находимся на <number>
          Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
            v_XML=v_XML + "<" + XML.Имя + ">";
            if XML.Имя = "number" then            
              XML.Прочитать(); // мы находимся можем прочитать number
              if XML.ТипУзла = ТипУзлаXML.Текст then
                
                link_contr = Справочники.Контрагенты.НайтиПоНаименованию(XML.Значение,Истина,Группа.Ссылка);
                
                Если link_contr.Пустая() Тогда 
                  v_cntr = Справочники.Контрагенты.СоздатьЭлемент(); 
                Иначе
                  v_cntr = link_contr.ПолучитьОбъект();
                КонецЕсли;
                
                v_cntr.Наименование = XML.Значение;
                v_cntr.НаименованиеПолное = XML.Значение+"1";
                v_cntr.Родитель = Группа.Ссылка;                  
                v_XML=v_XML + """" +XML.Значение+""""; 
                XML.Прочитать(); // мы находимся на </name>
              endif;
            endif;
          КонецЕсли;
          
          //XML.Прочитать(); // мы находимся на <full_name>
          //Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
          //  v_XML=v_XML + "<" + XML.Имя + ">";
          //  if XML.Имя = "full_name" then            
          //    XML.Прочитать(); // мы находимся можем прочитать name
          //    if XML.ТипУзла = ТипУзлаXML.Текст then
          //      v_XML=v_XML + """" +XML.Значение+""""; 
          //      v_cntr.НаименованиеПолное = XML.Значение;
          //      v_cntr.Родитель = Группа.Ссылка;  
          //      XML.Прочитать(); // мы находимся на </name>
          //    endif;
          //  endif;
          //КонецЕсли;

          v_cntr.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
          v_cntr.Записать();  
          ПолныйКодКонтрагента = v_cntr.ПолныйКод();
          v_XML=v_XML + "код=" + ПолныйКодКонтрагента; 
          
        endif;
      КонецЕсли;
    КонецЦикла;
  endif;
  
  XML.Закрыть();  

  // в ответ отдаем код 200 и что-нибудь в теле ответа
  //ПолныйКодКонтрагента = v_cntr.ПолныйКод();
  Ответ = Новый HTTPСервисОтвет(200);
  Ответ.УстановитьТелоИзСтроки("Контрагенты_Check Работает" + v_XML //+ ОписаниеОшибки()
  );
  Возврат Ответ;
КонецФункции

Функция Счета_Add(Запрос)

  //Читаем XML из POST запроса
  
  // http://176.9.37.248:8080/dev/hs/kzn/bill/add
  
  
////  <bills id = "2757" >
////      <bill bill_oid = "2757" >
////        <contract_number>20150123-5-1</contract_number>
////        <items>
////          <item>
////            <type>fare</type>
////            <flight_from>MOW</flight_from>
////            <flight_to>LON</flight_to>
////            <amount>12312</amount>
////            <is_nds>Y</is_nds>
////            <passenger_name>PAVEL RYZHIKOV</passenger_name>
////          </item>
////          <item>
////            <type>fee</type>
////            <flight_from>MOW</flight_from>
////            <flight_to>LON</flight_to>
////            <amount>100</amount>
////            <is_nds>N</is_nds>
////            <passenger_name>PAVEL RYZHIKOV</passenger_name>
////          </item>
////        </items>
////      </bill> 
////</bills> 
    
  //только создаем новый счет и все  
  v_XML="";
  is_fare = Истина;
  //читаем XML
  XML = Новый ЧтениеXML;
  XML.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
  
  
  XML.Прочитать();
  Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента И XML.Имя = "bills" Тогда  
    v_XML=v_XML + "<" + XML.Имя + ">";
    Пока XML.Прочитать() Цикл  //пробегаем все bill внутри bills
      Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента И XML.Имя = "bill" Тогда  
        счет = Документы.СчетНаОплатуПокупателю.СоздатьДокумент();
        счет.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду(810);
        счет.Дата = ТекущаяДата();
        //счет.СуммаВключаетНДС = Истина;   
        //счет.УчитыватьНДС = "Истина";
        //счет.Организация = Справочники.Организации.НайтиПоКоду("000000002");
        //счет.Комментарий = "Коммент";
        счет.СтатусОплаты = Перечисления.СтатусОплатыСчетаПокупателю.НеОплачен;
        счет.СтруктурнаяЕдиница = Справочники.БанковскиеСчета.НайтиПоРеквизиту("НомерСчета","40702810062000001497") ;
        Пока XML.ПрочитатьАтрибут() Цикл
          Если XML.Имя = "bill_oid" Тогда
            счет.bill_oid = XML.Значение;              
          КонецЕсли;
          //v_XML=v_XML + XML.Имя + " = " + XML.Значение;
        КонецЦикла;
        
        Пока XML.Прочитать() Цикл  //пробегаем все item внутри bill
          
          Если XML.Имя = "contract_number" И XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
            XML.Прочитать();
            счет.Контрагент = Справочники.Контрагенты.НайтиПоНаименованию(XML.Значение,Истина);

          //  счет.Контрагент = Справочники.Контрагенты.НайтиПоНаименованию(XML.Значение,Истина);
            //v_XML=v_XML + """" +XML.Значение+""""; 
          ИначеЕсли XML.Имя = "default" Тогда
            XML.Прочитать();
          КонецЕсли;   
          
          Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента И XML.Имя = "item" Тогда
  				  Услуг = счет.Услуги.Добавить();
            
            Услуг.Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию("счет на оплату билета",Истина);
            Услуг.Количество = 1;
            
            Пока XML.Прочитать() Цикл  //проход по элементам внутри item
              Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
                  ////v_XML=v_XML + "<" + XML.Имя + ">";
                  ////XML.Прочитать();
                  ////v_XML=v_XML + """" +XML.Значение+""""; 
                  //////XML.Значение;
                  
                Если XML.Имя = "type" Тогда
                  XML.Прочитать();
                  Если XML.Значение = "fare" Тогда
                    is_fare = Истина;
                    Услуг.Содержание = "перелет ";
                  ИначеЕсли XML.Значение = "fee" Тогда
                    is_fare = Ложь;
                    Услуг.Содержание = "комиссиионный сбор";
                  КонецЕсли;
                ИначеЕсли XML.Имя = "passenger_name" Тогда
                  XML.Прочитать();
                  Если is_fare = Истина Тогда
                    Услуг.Содержание = Услуг.Содержание +" пассажир " + XML.Значение;
                  КонецЕсли;
                ИначеЕсли XML.Имя = "flight_from" Тогда
                  XML.Прочитать();
                  Если is_fare = Истина Тогда
                    Услуг.Содержание = Услуг.Содержание + " из " + XML.Значение;
                  КонецЕсли;
                ИначеЕсли XML.Имя = "flight_to" Тогда
                  XML.Прочитать();
                  Если is_fare = Истина Тогда
                    Услуг.Содержание = Услуг.Содержание + " в " + XML.Значение;
                  КонецЕсли;
                ИначеЕсли XML.Имя = "amount" Тогда
                  XML.Прочитать();
                  Услуг.Цена = XML.Значение;
                  Услуг.Сумма = Услуг.Количество * Услуг.Цена;
                ИначеЕсли XML.Имя = "is_nds" Тогда
                  XML.Прочитать();
                  Если XML.Значение = "Y" Тогда
                    Услуг.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
                    Услуг.СуммаНДС = 0.18*Услуг.Сумма/(1+0.18);
                  Иначе
                    Услуг.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
                    Услуг.СуммаНДС = 0;
                  КонецЕсли;
                ИначеЕсли XML.Имя = "default" Тогда
                  XML.Прочитать();
                КонецЕсли;   
              КонецЕсли;
              //выходим
              Если XML.ТипУзла = ТипУзлаXML.КонецЭлемента И XML.Имя = "item" Тогда
                //v_XML=v_XML + "</" + XML.Имя + ">";
                Прервать;
              КонецЕсли;  
            КонецЦикла;
          КонецЕсли;   
          
          Если XML.ТипУзла = ТипУзлаXML.КонецЭлемента И XML.Имя = "bill" Тогда
            счет.СуммаДокумента = счет.Услуги.Итог("Сумма");
            счет.Записать(РежимЗаписиДокумента.Проведение);
            //v_XML=v_XML + "</" + XML.Имя + ">";
            Прервать;
          КонецЕсли;  
        КонецЦикла;
      КонецЕсли;    
    
      Если XML.ТипУзла = ТипУзлаXML.КонецЭлемента И XML.Имя = "bills" Тогда
        //v_XML=v_XML + "</" + XML.Имя + ">";
        Прервать;
      КонецЕсли;  
    КонецЦикла;
  КонецЕсли;    
  
  
  ////счет = Документы.СчетНаОплатуПокупателю.СоздатьДокумент();
  ////счет.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду(810);
  ////счет.Дата = ТекущаяДата();
  ////счет.Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("ИНН","1656075523");
  ////счет.СуммаВключаетНДС = Истина;   
  //////счет.УчитыватьНДС = "Истина";
  //////счет.Организация = Справочники.Организации.НайтиПоКоду("000000002");
  //////счет.Комментарий = "Коммент";
  ////счет.СтатусОплаты = Перечисления.СтатусОплатыСчетаПокупателю.НеОплачен;
  ////счет.bill_oid = 123321;
  ////счет.СтруктурнаяЕдиница = Справочники.БанковскиеСчета.НайтиПоРеквизиту("НомерСчета","40702810062000001497") ;
  ////
  ////			  Услуг = счет.Услуги.Добавить();
  ////        Услуг.Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию("счет на оплату билета",Истина);
  ////        Услуг.Содержание = "счет на оплату билета";
  ////        Услуг.Количество = 1;
  ////        Услуг.Цена = 555.00;
  ////        Услуг.Сумма = Услуг.Количество * Услуг.Цена;
  ////        Услуг.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
  ////        Услуг.СуммаНДС = 0.18*Услуг.Сумма/(1+0.18);

  //////счет.СуммаДокумента = Услуг.Сумма;  
  ////счет.СуммаДокумента = счет.Услуги.Итог("Сумма");
  ////счет.Записать(РежимЗаписиДокумента.Проведение);

  
  РеалТУ = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
  //РеалТУ.ЗаполнитьПоСчету("Услуги",счет.Ссылка);
  РеалТУ.Заполнить(счет.Ссылка);
  //РеалТУ.СчетУчетаРасчетовПоАвансам =  РегистрыБухгалтерии.Хозрасчетный
  РеалТУ.СчетУчетаРасчетовПоАвансам =  ПланыСчетов.Хозрасчетный.НайтиПоКоду("4103");
  //РеалТУ.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ДепозитныеСчета.Валютный;
  РеалТУ.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.НайтиПоКоду("01.01.");
  
  РеалТУ.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию("ИмяДоговора", Истина);
  
  
  
  //РеалТУ.АгентскиеУслуги.
  
  РеалТУ.Записать();
  
  
  // в ответ отдаем код 200 и что-нибудь в теле ответа
  Ответ = Новый HTTPСервисОтвет(200);
  Ответ.УстановитьТелоИзСтроки("Счета_Check Работает" + v_XML);
  Возврат Ответ;

КонецФункции

Функция test_test1(Запрос)
  
  //посик группы по имени. пусть имя будет "Бла-Бла и КО"
  ИмяГруппы = "Бла-Бла и КО"; 
  Группа = Справочники.Контрагенты.НайтиПоНаименованию(ИмяГруппы,Истина);
  //создаем пустой элементо. заполняем его данными и сохраняем.
  v_cntr = Справочники.Контрагенты.СоздатьЭлемент(); 

  v_XML=""; 
  //читаем XML
  XML = Новый ЧтениеXML;
  XML.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());

XML = Новый ЧтениеXML;
XML.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
Пока XML.Прочитать() Цикл
  
  Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
v_XML=v_XML + "<" + XML.Имя + ">";
      //company
      if XML.Имя = "company" then
        //Пока XML.ПрочитатьАтрибут() Цикл
        // v_XML=v_XML + XML.Имя + " = " + XML.Значение;
        //КонецЦикла;
        XML.Прочитать();
        Если XML.ТипУзла = ТипУзлаXML.Текст Тогда
          v_cntr.Наименование = XML.Значение;
          v_XML=v_XML + """" +XML.Значение+""""; 
        КонецЕсли;
      endif;

  Пока XML.ПрочитатьАтрибут() Цикл
   v_XML=v_XML + XML.Имя + " = " + XML.Значение;
 КонецЦикла;
 
КонецЕсли;

  Если XML.ТипУзла = ТипУзлаXML.Текст Тогда
  v_XML=v_XML + """" +XML.Значение+"""";
  КонецЕсли;
  Если XML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
   v_XML=v_XML + " END v=" + XML.Значение + " n=" +XML.Имя;
  КонецЕсли;
КонецЦикла;
XML.Закрыть();


  v_cntr.НаименованиеПолное = "Рыжиков Павел Евгеньевич";
  v_cntr.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
  v_cntr.Родитель = Группа.Ссылка;  
  v_cntr.Записать();  
  // в ответ отдаем код 200 и что-нибудь в теле ответа
  ПолныйКодКонтрагента = v_cntr.ПолныйКод();
  Ответ = Новый HTTPСервисОтвет(200);
  Ответ.УстановитьТелоИзСтроки("Контрагенты_Check Работает "+ПолныйКодКонтрагента  + v_XML );
  Возврат Ответ;

КонецФункции


Функция Счета_check(Запрос)

  //Читаем XML из POST запроса
  
  // http://176.9.37.248:8080/dev/hs/kzn/bill/add
  
  
  ////<bill id = "2757" >
  ////  <number>20150123-5-1</number>
  ////  <items>
  ////    <item>
  ////      <type>fare</type>
  ////      <amount>12312</amount>
  ////      <is_nds>Y</is_nds>
  ////      <PASSENGER_NAME>PAVEL RYZHIKOV</PASSENGER_NAME>
  ////    <item>
  ////    <item>
  ////      <type>fee</type>
  ////      <amount>100</amount>
  ////      <is_nds>Y</is_nds>
  ////      <PASSENGER_NAME>PAVEL RYZHIKOV</PASSENGER_NAME>
  ////    <item>
  ////  </items>
  ////</bill> 
    
  //только создаем новый счет и все  
  
  
  v_XML = "";
  счет = Документы.СчетНаОплатуПокупателю.СоздатьДокумент();
  счет.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду(810);
  счет.Дата = ТекущаяДата();
  счет.Контрагент = Справочники.Контрагенты.НайтиПоНаименованию("001-23203",Истина);
  счет.СуммаВключаетНДС = Истина;   
  //счет.УчитыватьНДС = "Истина";
  //счет.Организация = Справочники.Организации.НайтиПоКоду("000000002");
  счет.Комментарий = "Коммент";
  счет.СтатусОплаты = Перечисления.СтатусОплатыСчетаПокупателю.НеОплачен;
  счет.bill_oid = 123321;
  счет.СтруктурнаяЕдиница = Справочники.БанковскиеСчета.НайтиПоРеквизиту("НомерСчета","12321332211234234234") ;
  
				  Услуг = счет.Услуги.Добавить();
          Услуг.Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию("счет на оплату билета",Истина);
          Услуг.Содержание = "счет на оплату билета";
          Услуг.Количество = 2;
          Услуг.Цена = 555.00;
          Услуг.Сумма = Услуг.Количество * Услуг.Цена;
          Услуг.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
          Услуг.СуммаНДС = 0.18*Услуг.Сумма/(1+0.18);

  счет.СуммаДокумента = Услуг.Сумма;  
  счет.Записать(РежимЗаписиДокумента.Проведение);
  
  РеалТУ = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
  РеалТУ.ЗаполнитьПоСчету("Услуги",счет.Ссылка);
  РеалТУ.Записать(РежимЗаписиДокумента.Проведение);
  
  // в ответ отдаем код 200 и что-нибудь в теле ответа
  Ответ = Новый HTTPСервисОтвет(200);
  Ответ.УстановитьТелоИзСтроки("Счета_Check Работает" + v_XML+Услуг.СуммаНДС);
  
  //Отчеты.РеестрДокументов  
  //Ответ.УстановитьТелоИзДвоичныхДанных(
  Возврат Ответ;

КонецФункции

Функция testprint(Запрос)
  Ответ = Новый HTTPСервисОтвет(200);
  Возврат Ответ;
КонецФункции

Функция test2_print(Запрос)
  реал = Документы.РеализацияТоваровУслуг.НайтиПоНомеру("0000-000005");
  УправлениеПечатью.МакетыИДанныеОбъектовДляПечати("Документы.РеализацияТоваровУслуг","ПФ_MXL_Акт",Документы.РеализацияТоваровУслуг); 
  
  Ответ = Новый HTTPСервисОтвет(200);
  Возврат Ответ;  
  
КонецФункции





////////Функция 
////////ПечатьАктаОбОказанииУслуг(МассивОбъектов, ОбъектыПечати) ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить(); 
////////Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить; 
////////КонецЕсли; 
////////ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить; 
////////ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить(); 
////////ТабличныйДокумент = Новый ТабличныйДокумент; 
////////ТабличныйДокумент.АвтоМасштаб	= Истина; 
////////ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет; 
////////ТабличныйДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Акт"; 
////////Макет = УправлениеПечатью.ПолучитьМакет("Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт"); 
////////Запрос = Новый Запрос(); 
////////Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов); 
////////Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить()); 
////////Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета()); 
////////Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыАктаУслуги(); 
////////Шапка = Запрос.Выполнить().Выбрать(); 
////////Запрос.Текст = "ВЫБРАТЬ |	Хозрасчетный.Регистратор КАК Регистратор, |	Хозрасчетный.СчетДт, | Хозрасчетный.СчетКт, |	СУММА(Хозрасчетный.Сумма) КАК Сумма |ИЗ |	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный |ГДЕ |	Хозрасчетный.Регистратор В(&МассивОбъектов) | |СГРУППИРОВАТЬ ПО |	Хозрасчетный.СчетДт, |	Хозрасчетный.СчетКт, |	Хозрасчетный.Регистратор | |УПОРЯДОЧИТЬ ПО |	Регистратор"; 
////////ВыборкаСуммВзаиморасчетов = Запрос.Выполнить().Выбрать(); 
////////ПервыйДокумент = Истина; 
////////ОписаниеТиповЧисло15_2 = ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15, 2); 
////////ТаблицаУслуги = Новый ТаблицаЗначений; 
////////ТаблицаУслуги.Колонки.Добавить("Номенклатура"); 
////////ТаблицаУслуги.Колонки.Добавить("Товар"); 
////////ТаблицаУслуги.Колонки.Добавить("КодАртикул"); 
////////ТаблицаУслуги.Колонки.Добавить("Количество"); 
////////ТаблицаУслуги.Колонки.Добавить("ЕдиницаИзмерения"); 
////////ТаблицаУслуги.Колонки.Добавить("Цена", ОписаниеТиповЧисло15_2); 
////////ТаблицаУслуги.Колонки.Добавить("Сумма", ОписаниеТиповЧисло15_2); 
////////ТаблицаУслуги.Колонки.Добавить("СтавкаНДС"); 
////////ТаблицаУслуги.Колонки.Добавить("СуммаНДС", ОписаниеТиповЧисло15_2); 
////////ТаблицаУслуги.Колонки.Добавить("НомерСтроки"); 
////////ТаблицаУслуги.Колонки.Добавить("ID"); 
////////ТаблицаУслуги.Колонки.Добавить("СуммаБезНДС", ОписаниеТиповЧисло15_2); 
////////ТаблицаУслуги.Колонки.Добавить("СуммаРублевая", ОписаниеТиповЧисло15_2); 
////////ТаблицаУслуги.Колонки.Добавить("ЭтоКомиссия", Новый ОписаниеТипов("Булево")); 
////////Пока Шапка.СледующийПоЗначениюПоля("Ссылка") Цикл СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента); 
////////ПредставлениеПоставщика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,ИНН,КПП,Телефоны,"); 
////////Если НЕ ПервыйДокумент Тогда ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц(); 
////////КонецЕсли; ПервыйДокумент = Ложь; 
////////// Запомним номер строки, с которой начали выводить текущий документ. 
////////НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1; 
////////ТаблицаУслуги = ПодготовитьТаблицуДокументаДляПечати(Шапка, ТаблицаУслуги, ВыборкаСуммВзаиморасчетов, Ложь, Истина); 
////////ОбластьМакета = Макет.ПолучитьОбласть("Заголовок"); 
////////ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка, "Акт выполненных работ (оказанных услуг)"); 
////////ТабличныйДокумент.Вывести(ОбластьМакета); 
////////ОбластьМакета = Макет.ПолучитьОбласть("Поставщик"); 
////////СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата); 
////////ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика; 
////////ОбластьМакета.Параметры.Поставщик = Шапка.Поставщик; 
////////ТабличныйДокумент.Вывести(ОбластьМакета); 
////////ОбластьМакета = Макет.ПолучитьОбласть("Покупатель"); 
////////СведенияОКонтрагенте = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата); 
////////ПредставлениеПолучателя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,ИНН,КПП,Телефоны,"); 
////////ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя; 
////////ОбластьМакета.Параметры.Получатель = Шапка.Получатель; 
////////ТабличныйДокумент.Вывести(ОбластьМакета); 
////////ЕстьСкидки = Ложь; 
////////// Вывести табличную часть 
////////ОбластьШапки = ?(ВыводитьКоды, "ШапкаСКодом", "ШапкаТаблицы"); 
////////ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки); 
////////ОбластьМакета.Параметры.Заполнить(Шапка); 
////////Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда ОбластьМакета.Параметры.ИмяКодАртикул = "Артикул"; 
////////ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда ОбластьМакета.Параметры.ИмяКодАртикул = "Код"; 
////////КонецЕсли; ТабличныйДокумент.Вывести(ОбластьМакета); 
////////ОбластьСтроки = ?(ВыводитьКоды, "СтрокаСКодом", "Строка"); 
////////ОбластьСтроки = Макет.ПолучитьОбласть(ОбластьСтроки); 
////////НомерСтроки = 0; 
////////Для каждого СтрокаТабличнойЧасти Из ТаблицаУслуги Цикл НомерСтроки = НомерСтроки + 1; 
////////ОбластьСтроки.Параметры.Заполнить(СтрокаТабличнойЧасти); ОбластьСтроки.Параметры.НомерСтроки = НомерСтроки; 
////////ОбластьСтроки.Параметры.Товар = СокрЛП(СтрокаТабличнойЧасти.Товар); 
////////Если Шапка.ВалютаДокумента ВалютаРегламентированногоУчета Тогда Числ = ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.Сумма), СтрокаТабличнойЧасти.Сумма, 0); 
////////Знам = ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество), СтрокаТабличнойЧасти.Количество, 1); 
////////ОбластьСтроки.Параметры.Цена = Числ/Знам; 
////////КонецЕсли; 
////////ТабличныйДокумент.Вывести(ОбластьСтроки); 
////////КонецЦикла; 
////////Если ТаблицаУслуги Неопределено Тогда Сумма = ТаблицаУслуги.Итог("Сумма"); 
////////СуммаНДС = ТаблицаУслуги.Итог("СуммаНДС"); 
////////Иначе Сумма = 0; 
////////СуммаНДС = 0; 
////////КонецЕсли; 
////////ОбластьМакета = Макет.ПолучитьОбласть("Итого"); 
////////ОбластьМакета.Параметры.Всего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма); 
////////ТабличныйДокумент.Вывести(ОбластьМакета); 
////////ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС"); 
////////Если СуммаНДС 0 Тогда ОбластьМакета.Параметры.ВсегоНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаНДС); 
////////ОбластьМакета.Параметры.НДС = ?(Шапка.СуммаВключаетНДС, "В том числе НДС", " Сумма НДС"); 
////////Иначе ОбластьМакета.Параметры.ВсегоНДС = "-"; 
////////ОбластьМакета.Параметры.НДС = "Без налога (НДС)"; 
////////КонецЕсли; 
////////ТабличныйДокумент.Вывести(ОбластьМакета); 
////////СуммаКПрописи = Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС); 
////////ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью"); 
////////ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего оказано услуг " + НомерСтроки + ", на сумму " + ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаКПрописи, ВалютаРегламентированногоУчета); 
////////ОбластьМакета.Параметры.СуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаКПрописи, ВалютаРегламентированногоУчета); 
////////ТабличныйДокумент.Вывести(ОбластьМакета); 
////////ОбластьМакета = Макет.ПолучитьОбласть("Подписи"); 
////////ТабличныйДокумент.Вывести(ОбластьМакета); 
////////// В табличном документе зададим имя области, в которую был 
////////// выведен объект. Нужно для возможности печати покомплектно. 
////////УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка); 
////////КонецЦикла; 
////////Возврат ТабличныйДокумент; 
////////КонецФункции